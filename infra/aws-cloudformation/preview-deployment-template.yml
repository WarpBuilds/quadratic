AWSTemplateFormatVersion: 2010-09-09
Description: Quadratic Preview - Deployment Template

Parameters:
  LicenseKey:
    Type: String
    Description: Your license key for Quadratic. Get one here https://selfhost.quadratichq.com/
  ImageTag:
    Type: String
    Description: Image tag to use for all services

Resources:
  # Security Group for the EC2 instance
  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      Tags:
        - Key: Name
          Value: !Ref ImageTag
      GroupDescription: !Ref ImageTag
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0

  # IAM Role for the EC2 instance
  EC2Role:
    Type: AWS::IAM::Role
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      Tags:
        - Key: Name
          Value: !Ref ImageTag
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly

  # IAM Instance Profile for the EC2 instance
  EC2InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      Roles:
        - !Ref EC2Role

  # EC2 instance
  EC2Instance:
    Type: AWS::EC2::Instance
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      Tags:
        - Key: Name
          Value: !Sub "${ImageTag}"
      InstanceType: m6a.large
      ImageId: ami-0aa830d419bb978e9 # quadratic-preview-base-ami
      IamInstanceProfile: !Ref EC2InstanceProfile
      SecurityGroups:
        - !Ref SecurityGroup
      BlockDeviceMappings:
        - DeviceName: /dev/sda1
          Ebs:
            VolumeSize: 30
            VolumeType: gp3
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash

          # Append environment variables to .env file
          cat << EOF >> /quadratic-selfhost/.env

          #AWS
          ECR_URL=${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com
          IMAGE_TAG=${ImageTag}
          EOF

          # Create login.sh script and run it
          cat << 'EOF' > /quadratic-selfhost/login.sh
          #!/bin/bash
          aws ecr get-login-password --region ${AWS::Region} | docker login --username AWS --password-stdin ${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com
          EOF

          chmod +x /quadratic-selfhost/login.sh
          cd /quadratic-selfhost
          ./login.sh

          # Run Quadratic initialization script
          ./init.sh "${LicenseKey}" "${ImageTag}.quadratic-selfhost.com"

  # # IAM Role for the EventBridge rule
  # EventBridgeRole:
  #   Type: AWS::IAM::Role
  #   DeletionPolicy: Delete
  #   UpdateReplacePolicy: Delete
  #   Properties:
  #     Tags:
  #       - Key: Name
  #         Value: !Ref ImageTag
  #     AssumeRolePolicyDocument:
  #       Version: 2012-10-17
  #       Statement:
  #         - Effect: Allow
  #           Principal:
  #             Service: events.amazonaws.com
  #           Action: sts:AssumeRole
  #     Policies:
  #       - PolicyName: InvokeSsmAutomation
  #         PolicyDocument:
  #           Version: 2012-10-17
  #           Statement:
  #             - Effect: Allow
  #               Action:
  #                 - ssm:SendCommand
  #               Resource: !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:*"

  # EcrPushRule:
  #   Type: AWS::Events::Rule
  #   DeletionPolicy: Delete
  #   UpdateReplacePolicy: Delete
  #   Properties:
  #     Description: Rule to detect ECR image pushes
  #     EventPattern:
  #       source:
  #         - aws.ecr
  #       detail-type:
  #         - ECR Image Action
  #       detail:
  #         action-type:
  #           - PUSH
  #         repository-name:
  #           - quadratic-client-development
  #           - quadratic-api-development
  #           - quadratic-multiplayer-development
  #           - quadratic-files-development
  #           - quadratic-connection-development
  #         image-tag:
  #           - !Ref ImageTag
  #     State: ENABLED
  #     Targets:
  #       - Arn: !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:automation-definition/AWS-RunShellScript"
  #         Id: TriggerScriptOnInstance
  #         RoleArn: !GetAtt EventBridgeRole.Arn
  #         InputTransformer:
  #           InputPathsMap:
  #             imageTag: $.detail.image-tag
  #             repository: $.detail.repository-name
  #           InputTemplate: !Sub |
  #             {
  #               "InstanceIds": ["${EC2Instance.InstanceId}"],
  #               "DocumentName": "AWS-RunShellScript",
  #               "Parameters": {
  #                 "commands": [
  #                   "cd /quadratic-selfhost",
  #                   "./login.sh",
  #                   "./start.sh"
  #                 ]
  #               }
  #             }

  # Global Accelerator
  GlobalAccelerator:
    Type: AWS::GlobalAccelerator::Accelerator
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      Name: !Sub "${ImageTag}"
      Enabled: true
      Tags:
        - Key: Name
          Value: !Ref ImageTag

  # Global Accelerator Listener
  GlobalAcceleratorListener:
    Type: AWS::GlobalAccelerator::Listener
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      AcceleratorArn: !Ref GlobalAccelerator
      Protocol: TCP
      PortRanges:
        - FromPort: 80
          ToPort: 80
        - FromPort: 443
          ToPort: 443

  # Global Accelerator Endpoint Group
  GlobalAcceleratorEndpointGroup:
    Type: AWS::GlobalAccelerator::EndpointGroup
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      ListenerArn: !Ref GlobalAcceleratorListener
      EndpointGroupRegion: !Ref AWS::Region
      EndpointConfigurations:
        - EndpointId: !Ref EC2Instance
          Weight: 100
          ClientIPPreservationEnabled: true

  # DNS record for the main application
  DNSRecord:
    Type: AWS::Route53::RecordSet
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      HostedZoneId: Z08322143IM80L9CZZQV5
      Name: !Sub "${ImageTag}.quadratic-selfhost.com."
      Type: A
      AliasTarget:
        DNSName: !GetAtt GlobalAccelerator.DnsName
        HostedZoneId: Z2BJ6XQ5FK7U4H
        EvaluateTargetHealth: true

  # Wildcard DNS record for all services on subdomains
  WildcardDNSRecord:
    Type: AWS::Route53::RecordSet
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      HostedZoneId: Z08322143IM80L9CZZQV5
      Name: !Sub "*.${ImageTag}.quadratic-selfhost.com."
      Type: A
      AliasTarget:
        DNSName: !GetAtt GlobalAccelerator.DnsName
        HostedZoneId: Z2BJ6XQ5FK7U4H
        EvaluateTargetHealth: true

Outputs:
  WebsiteURL:
    Description: Website URL
    Value: !Sub "https://${ImageTag}.quadratic-selfhost.com"
