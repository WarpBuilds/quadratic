AWSTemplateFormatVersion: 2010-09-09
Description: Quadratic Preview - Deployment Template

Parameters:
  LicenseKey:
    Type: String
    Description: Your license key for Quadratic. Get one here https://selfhost.quadratichq.com/
  ImageTag:
    Type: String
    Description: Image tag to use for all services
  GitSHA:
    Type: String
    Description: Git short SHA to use for all services

Resources:
  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      Tags:
        - Key: Name
          Value: !Ref ImageTag
      GroupDescription: !Ref ImageTag
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0

  EC2Role:
    Type: AWS::IAM::Role
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      Tags:
        - Key: Name
          Value: !Ref ImageTag
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly
        - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore
      Policies:
        - PolicyName: ECRAccess
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - ecr:GetAuthorizationToken
                  - ecr:BatchCheckLayerAvailability
                  - ecr:GetDownloadUrlForLayer
                  - ecr:BatchGetImage
                  - ecr:DescribeImages
                  - ecr:ListImages
                Resource: "*"

  EventBridgeRole:
    Type: AWS::IAM::Role
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      Tags:
        - Key: Name
          Value: !Ref ImageTag
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: events.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: InvokeSsmAutomation
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - ssm:SendCommand
                Resource: !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:*"

  EC2InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      Roles:
        - !Ref EC2Role

  EC2Instance:
    Type: AWS::EC2::Instance
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      Tags:
        - Key: Name
          Value: !Ref ImageTag
      InstanceType: m6a.large
      ImageId: ami-0fd0cf59e80d3f545 # quadratic-preview-ami-base
      IamInstanceProfile: !Ref EC2InstanceProfile
      SecurityGroups:
        - !Ref SecurityGroup
      BlockDeviceMappings:
        - DeviceName: /dev/sda1
          Ebs:
            VolumeSize: 30
            VolumeType: gp3
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash

          # Export environment variables for docker-compose
          echo "export ECR_URL=${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com" >> /home/ubuntu/.profile
          echo "export IMAGE_TAG=${ImageTag}" >> /home/ubuntu/.profile
          echo "export GIT_SHA=${GitSHA}" >> /home/ubuntu/.profile

          # Source the new environment variables
          sudo -u ubuntu bash -c 'source /home/ubuntu/.profile'

          # Create login.sh script and run it
          cat << 'EOF' > /home/ubuntu/quadratic-selfhost/login.sh
          #!/bin/bash
          aws ecr get-login-password --region ${AWS::Region} | docker login --username AWS --password-stdin ${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com
          EOF

          chmod +x /home/ubuntu/quadratic-selfhost/login.sh
          cd /home/ubuntu/quadratic-selfhost
          ./login.sh

          # Run Quadratic initialization script
          ./init.sh "${LicenseKey}" "${ImageTag}-${GitSHA}.quadratic-preview.com"

  GlobalAccelerator:
    Type: AWS::GlobalAccelerator::Accelerator
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      Name: !Sub "${ImageTag}-${GitSHA}"
      Enabled: true
      Tags:
        - Key: Name
          Value: !Ref ImageTag

  DnsRecords:
    Type: AWS::Route53::RecordSet
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      HostedZoneId: Z0126430TJ1UYIMO3SYX
      Name: !Sub "${ImageTag}-${GitSHA}.quadratic-preview.com"
      Type: A
      AliasTarget:
        DNSName: !GetAtt GlobalAccelerator.DnsName
        HostedZoneId: Z2BJ6XQ5FK7U4H
        EvaluateTargetHealth: true

  WildcardDnsRecord:
    Type: AWS::Route53::RecordSet
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      HostedZoneId: Z0126430TJ1UYIMO3SYX
      Name: !Sub "*.${ImageTag}-${GitSHA}.quadratic-preview.com"
      Type: A
      AliasTarget:
        DNSName: !GetAtt GlobalAccelerator.DnsName
        HostedZoneId: Z2BJ6XQ5FK7U4H
        EvaluateTargetHealth: true

  GlobalAcceleratorListener:
    Type: AWS::GlobalAccelerator::Listener
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      AcceleratorArn: !Ref GlobalAccelerator
      Protocol: TCP
      PortRanges:
        - FromPort: 80
          ToPort: 80
        - FromPort: 443
          ToPort: 443

  EcrPushRule:
    Type: AWS::Events::Rule
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    DependsOn:
      - EC2Instance
    Properties:
      Description: Rule to detect ECR image pushes
      EventPattern:
        source:
          - aws.ecr
        detail-type:
          - ECR Image Action
        detail:
          action-type:
            - PUSH
          repository-name:
            - quadratic-client-development
            - quadratic-api-development
            - quadratic-multiplayer-development
            - quadratic-files-development
            - quadratic-connection-development
          image-tag:
            - !Ref ImageTag
      State: ENABLED
      Targets:
        - Arn: !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:automation-definition/AWS-RunShellScript"
          Id: TriggerScriptOnInstance
          RoleArn: !GetAtt EventBridgeRole.Arn
          InputTransformer:
            InputPathsMap:
              imageTag: $.detail.image-tag
              repository: $.detail.repository-name
            InputTemplate: !Sub |
              {
                "InstanceIds": ["${EC2Instance.InstanceId}"],
                "DocumentName": "AWS-RunShellScript",
                "Parameters": {
                  "commands": [
                    "cd /home/ubuntu/quadratic-selfhost",
                    "./login.sh",
                    "./start.sh"
                  ]
                }
              }

  GlobalAcceleratorEndpointGroup:
    Type: AWS::GlobalAccelerator::EndpointGroup
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      ListenerArn: !Ref GlobalAcceleratorListener
      EndpointGroupRegion: !Ref AWS::Region
      EndpointConfigurations:
        - EndpointId: !Ref EC2Instance
          Weight: 100
          ClientIPPreservationEnabled: true

Outputs:
  DnsRecord:
    Description: Url of the preview instance
    Value: !Sub "${ImageTag}-${GitSHA}.quadratic-preview.com"
